// .img-siz-dcrs{
//     height: 50px;
// }
//mixins ------
//
//  MEDIA QUERIES
//––––––––––––––––––––––––––––––––––––––––––––––––––

// A map of breakpoints.
$breakpoints: (
  xs: 375px,
  sm: 640px,
  md: 960px,
  lg: 1200px,
  xl: 1600px,
  custom-tablet: 768px
);

//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  }

  @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}


//
//  RESPOND BELOW
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-below(sm) {}
@mixin respond-below($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  }

  @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

//
//  RESPOND BETWEEN
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-between(sm, md) {}
@mixin respond-between($lower, $upper) {

  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {

    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);

    // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }

    // If one or both of the breakpoints don't exist.
  }

  @else {

    // If lower breakpoint is invalid.
    @if (map-has-key($breakpoints, $lower)==false) {

      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($breakpoints, $upper)==false) {

      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}

.searchItem {
  border: 1px solid lightgray;
  padding: 10px;
  border-radius: 5px;
  display: flex;
  justify-content: space-between;
  gap: 20px;
  margin-bottom: 20px;
}

.siCheckButton-foint-siz {
  font-size: small;
  background-color: #0071c2;
  color: white;

  padding: 6px 5px;
  border: none;
  cursor: pointer;
  border-radius: 5px;
}

.img-siz-dcrs {
  width: 143px;
  height: 143px;
  object-fit: cover;

}

.NameFountsiz {
  font-size: small;

  &:hover {
    text-decoration: underline;
    cursor: pointer;


  }
}

h6 {
  font-size: smaller;

  &:hover {
    text-decoration: underline;
    cursor: pointer;


  }

}

.siDesc {
  display: flex;
  flex-direction: column;
  gap: 10px;
  flex: 2;

  h1 {
    cursor: pointer;
    line-height: normal;
  }
}

.siTitle {
  font-size: 20px;
  color: #0071c2;
}

.siDetails {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between
}

.siRating {
  display: flex;
  justify-content: space-between
}

.siDetailTexts {
  text-align: right;
  display: flex;
  flex-direction: column;
  gap: 5px;
}

.siPrice {
  font-size: 24px;
}

.siTaxOp {
  font-size: 12px;
  color: gray;
}

.siCheckButton {
  background-color: #0071c2;
  color: white;
  font-weight: bold;
  padding: 10px 5px;
  border: none;
  cursor: pointer;
  border-radius: 5px;
}

@include respond-between(xs, sm) {
  .searchItem {

    flex-direction: row;
    flex-wrap: nowrap;
  }

  .img-siz-dcrs {
    width: 80px;
    height: 55px;
  }

  .siRating {
    flex-direction: column;
    flex-wrap: wrap;
    align-items: flex-end;
  }


}

// border: 1px solid lightgray;
// padding: 10px;
// border-radius: 5px;
// display: flex;
// gap: 20px;
// margin-bottom: 20px;
// /* width: 69%; */
// flex-direction: row;
// flex-wrap: nowrap;